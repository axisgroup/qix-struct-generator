module.exports = [{"struct":"HyperCubeDef","property":"qStateName","description":"Name of the alternate state.\r\nDefault is current selections $.","type":"String","array":"FALSE","default":"$"},{"struct":"HyperCubeDef","property":"qDimensions","description":"Array of dimensions.","type":"NxDimension","array":"TRUE"},{"struct":"HyperCubeDef","property":"qMeasures","description":"Array of measures.","type":"NxMeasure","array":"TRUE"},{"struct":"HyperCubeDef","property":"qInterColumnSortOrder","description":"Order the columns of the hypercube should be sorted.\r\nColumn numbers are separated by a comma.\r\nExample: [1,0,2] means that the first column to be sorted should be the column 1, followed by the column 0 and the column 2.\r\nThe default sort order is the order in which the dimensions and measures have been defined in the hypercube. By default, the pseudo-dimension (if any) is the most to the right in the array.\r\nThe index of the pseudo-dimension (if any) is -1.\r\nPseudo dimensions only apply for pivot tables with more than one measure.\r\nA pseudo dimension groups together the measures defined in a pivot table. You can neither collapse/expand a pseudo dimension nor make any selections in it.\r\nStacked pivot tables can only contain one measure.","type":"Integer","array":"TRUE"},{"struct":"HyperCubeDef","property":"qSuppressZero","description":"Removes zero values. ","type":"Boolean","array":"FALSE","default":"FALSE"},{"struct":"HyperCubeDef","property":"qSuppressMissing","description":"Removes missing values.","type":"Boolean","array":"FALSE","default":"FALSE"},{"struct":"HyperCubeDef","property":"qInitialDataFetch","description":"Initial data set.","type":"NxPage","array":"TRUE"},{"struct":"HyperCubeDef","property":"qMode","description":"Defines the way the data are handled internally by the engine.\r\nDefault value is DATA_MODE_STRAIGHT.\r\nA pivot table can contains several dimensions and measures whereas a stacked pivot table can contain several dimensions but only one measure.","type":"String","array":"FALSE","default":"S","options":"S,P,K"},{"struct":"HyperCubeDef","property":"qNoOfLeftDims","description":"Number of left dimensions.\r\nDefault value is -1. In that case, all dimensions are left dimensions.\r\nThe index related to each left dimension depends on the position of the pseudo dimension (if any).\r\nFor example, a pivot table with:\r\n4 dimensions in the following order: Country, City, Product and Category\r\none pseudo dimension in position 1 (the position is defined in qInterColumnSortOrder)\r\nqInterColumnSortOrder is (0,-1,1,2,3)\r\n3 left dimensions (qNoOfLeftDims is set to 3).\r\nimplies that:\r\nThe index 0 corresponds to the left dimension Country\r\nThe index 1 corresponds to the pseudo dimension\r\nThe index 2 corresponds to the left dimension City\r\nProduct and Category are top dimensions.\r\nAnother example:\r\n4 dimensions in the following order: Country, City, Product and Category\r\n3 left dimensions (qNoOfLeftDims is set to 3).\r\none pseudo dimension\r\nthe property qInterColumnSortOrder is left empty.\r\nimplies that:\r\nThe index 0 corresponds to the left dimension Country\r\nThe index 1 corresponds to the left dimension City\r\nThe index 2 corresponds to the left dimension Product\r\nCategory is a top dimension.\r\nThe pseudo dimension is a top dimension","type":"Integer","array":"FALSE","default":"-1"},{"struct":"HyperCubeDef","property":"qAlwaysFullyExpanded","description":"If this property is set to true, the cells are always expanded. It implies that it is not possible to collapse any cells.","type":"Boolean","array":"FALSE","default":"FALSE"},{"struct":"HyperCubeDef","property":"qMaxStackedCells","description":"Maximum number of cells for an initial data fetch (set in qInitialDataFetch) when in stacked mode (qMode is K).","type":"Integer","array":"FALSE","default":"5000"},{"struct":"HyperCubeDef","property":"qPopulateMissing","description":"If this property is set to true, the missing symbols (if any) are replaced by 0 if the value is a numeric and by an empty string if the value is a string.","type":"Boolean","array":"FALSE","default":"FALSE"},{"struct":"HyperCubeDef","property":"qShowTotalsAbove","description":"If set to true, the total (if any) is shown on the first row.","type":"Boolean","array":"FALSE","default":"FALSE"},{"struct":"HyperCubeDef","property":"qIndentMode","description":"This property applies for pivot tables and allows to change the layout of the table. An indentation is added to the beginning of each row.","type":"Boolean","array":"FALSE","default":"FALSE"},{"struct":"HyperCubeDef","property":"qCalcCond","description":"Specifies a calculation condition, which must be fulfilled for the hypercube to be (re)calculated.","type":"ValueExpr","array":"FALSE"},{"struct":"HyperCubeDef","property":"qSortbyYValue","description":"To enable the sorting by ascending or descending order in the values of a measure.\r\nThis property applies to pivot tables and stacked pivot tables.\r\nIn the case of a pivot table, the measure or pseudo dimension should be defined as a top dimension. The sorting is restricted to the values of the first measure in a pivot table.","type":"Integer","array":"FALSE","options":"-1,0,1"},{"struct":"NxDimension","property":"qLibraryId","description":"Refers to a dimension stored in the library.","type":"String","array":"FALSE"},{"struct":"NxDimension","property":"qDef","description":"Refers to a dimension stored in the hypercube.","type":"NxInlineDimensionDef","array":"FALSE"},{"struct":"NxDimension","property":"qNullSuppression","description":"If set to true, no null values are returned.","type":"Boolean","array":"FALSE"},{"struct":"NxDimension","property":"qOtherTotalSpec","description":" \r\nSets the dimension limits. Each dimension of a hypercube is configured separately.\r\nDefines if some values (grouped as Others) should be grouped together in the visualization.\r\nFor example in a pie chart all values lower than 200 could be grouped together","type":"OtherTotalSpecProp","array":"FALSE"},{"struct":"NxDimension","property":"qShowAll","description":"If set to true, all dimension values are shown.","type":"Boolean","array":"FALSE"},{"struct":"NxDimension","property":"qOtherLabel","description":"This property is used when some dimension limits are set.\r\nLabel of the Others group. The default label is Others.\r\nExample:\r\n\"qOtherLabel\":\"=<label>\"\r\nor\r\n\"qOtherLabel\":{\"qExpr\":\"=<label>\"}\r\nWhere\r\n<label> is the label of the Others group.","type":"String","array":"FALSE","default":"Others"},{"struct":"NxDimension","property":"qTotalLabel","description":"If this property is set, the total of the calculated values is returned.\r\nThe default label is Total.\r\nExample:\r\n\"qTotalLabel\":\"=<label>\"\r\nor\r\n\"qTotalLabel\":{\"qExpr\":\"=<label>\"}\r\nWhere\r\n<label> is the label of the Totalgroup.","type":"String","array":"FALSE","default":"Total"},{"struct":"NxDimension","property":"qCalcCond","description":"Specifies a calculation condition, which must be fulfilled for the dimension to be calculated.\r\nIf the calculation condition is not met, the dimension is excluded from the calculation.\r\nThis property is optional. By default, there is no calculation condition.","type":"ValueExpr","array":"FALSE"},{"struct":"NxDimension","property":"qAttributeExpression","description":"List of attribute expressions.","type":"NxAttrExprDef","array":"TRUE"},{"struct":"NxDimension","property":"qAttributeDimensions","description":"List of attribute dimensions.","type":"NxAttrDimDef","array":"TRUE"},{"struct":"NxMeasure","property":"qLibraryId","description":"Refers to a measure stored in the library.","type":"String","array":"FALSE"},{"struct":"NxMeasure","property":"qDef","description":"Refers to a measure stored in the hypercube.","type":"NxInlineMeasureDef","array":"FALSE"},{"struct":"NxMeasure","property":"qSortBy","description":"Defines the sort criteria.\r\nThis property is optional. The default value is sort by ascending alphabetic order.","type":"SortCriteria","array":"FALSE"},{"struct":"NxMeasure","property":"qAttributeExpressions","description":"List of attribute expressions.","type":"NxAttrExprDef","array":"TRUE"},{"struct":"NxMeasure","property":"qCalcCond","description":"Specifies a calculation condition, which must be fulfilled for the measure to be calculated.\r\nIf the calculation condition is not met, the measure is excluded from the calculation.\r\nThis property is optional. By default, there is no calculation condition.","type":"ValueExpr","array":"FALSE"},{"struct":"NxMeasure","property":"qAttributeDimensions","description":" List of attribute dimensions.","type":"NxAttrDimDef","array":"TRUE"},{"struct":"NxPage","property":"qLeft","description":"Position from the left.\r\nCorresponds to the first column.","type":"Integer","array":"FALSE"},{"struct":"NxPage","property":"qTop","description":"Position from the top.\r\nCorresponds to the first row.","type":"Integer","array":"FALSE"},{"struct":"NxPage","property":"qWidth","description":"Number of columns in the page. The indexing of the columns may vary depending on whether the cells are expanded or not (parameter qAlwaysFullyExpanded in HyperCubeDef).","type":"Integer","array":"FALSE"},{"struct":"NxPage","property":"qHeight","description":"Number of rows or elements in the page. The indexing of the rows may vary depending on whether the cells are expanded or not (parameter qAlwaysFullyExpanded in HyperCubeDef).","type":"Integer","array":"FALSE"},{"struct":"ValueExpr","property":"ValueExpr","description":"\"qv\": \"<expression>\"","type":"String","array":"FALSE"},{"struct":"NxInlineDimensionDef","property":"qGrouping","description":"Used to define a cyclic group or drill-down group.\r\nThis parameter is optional.\r\nDefault value is no grouping.","type":"String","array":"FALSE","default":"N","options":"N,H,C"},{"struct":"NxInlineDimensionDef","property":"qFieldDefs","description":"Array of field names.\r\nWhen creating a grouped dimension, more than one field name is defined.\r\nThis parameter is optional.","type":"String","array":"TRUE"},{"struct":"NxInlineDimensionDef","property":"qFieldLabels","description":"Array of field labels.\r\nThis parameter is optional.","type":"String","array":"TRUE"},{"struct":"NxInlineDimensionDef","property":"qSortCriterias","description":"Defines the sorting criteria in the field.\r\nThis parameter is optional.\r\nDefault is to sort by alphabetical order, ascending.","type":"String","array":"TRUE","default":"Ascending"},{"struct":"NxInlineDimensionDef","property":"qNumberPresentations","description":"Defines the format of the value.\r\nThis parameter is optional.","type":"FieldAttributes","array":"TRUE"},{"struct":"NxInlineDimensionDef","property":"qReverseSort","description":"If set to true, it inverts the sort criteria in the field.","type":"Boolean","array":"FALSE"},{"struct":"NxInlineDimensionDef","property":"qActiveField","description":"Index of the active field in a cyclic dimension.\r\nThis parameter is optional. The default value is 0.\r\nThis parameter is used in case of cyclic dimensions (qGrouping is C).","type":"Integer","array":"FALSE","default":"0"},{"struct":"OtherTotalSpecProp","property":"qOtherMode","description":"Determines how many dimension values are displayed.","type":"String","array":"FALSE","default":"OTHER_OFF","options":"OTHER_OFF, OTHER_COUNTED, OTHER_ABS_LIMITED,  OTHER_ABS_ACC_TARGET, OTHER_REL_LIMITED, OTHER_REL_ACC_TARGET"},{"struct":"OtherTotalSpecProp","property":"qOtherCounted","description":"Number of values to display. The number of values can be entered as a calculated formula.\r\nThis parameter is used when qOtherMode is set to OTHER_COUNTED.\r\n\"qv\": \"<expression>\"\r\nWhere\r\n<expression> is a string.","type":"String","array":"FALSE"},{"struct":"OtherTotalSpecProp","property":"qOtherLimit","description":"Value used to limit the dimension values. The limit can be entered as a calculated formula.\r\nThis parameter is used when qOtherMode is set to:\r\nOTHER_ABS_LIMITED\r\nOTHER_REL_LIMITED\r\nOTHER_ABS_ACC_TARGET\r\nOTHER_REL_ACC_TARGET\r\n\"qv\": \"<expression>\"\r\nWhere\r\n<expression> is a string.","type":"String","array":"FALSE"},{"struct":"OtherTotalSpecProp","property":"qOtherLimitMode","description":"Sets the limit for the Others mode.\r\nThis parameter is used when qOtherMode is set to:\r\nOTHER_ABS_LIMITED\r\nOTHER_REL_LIMITED\r\nOTHER_ABS_ACC_TARGET\r\nOTHER_REL_ACC_TARGET","type":"String","array":"FALSE","default":"OTHER_GT_LIMIT","options":"OTHER_GE_LIMIT, OTHER_LE_LIMIT, OTHER_GT_LIMIT, OTHER_LT_LIMIT"},{"struct":"OtherTotalSpecProp","property":"qSuppressOther","description":"If set to true, the group Others is not displayed as a dimension value.","type":"Boolean","array":"FALSE","default":"FALSE"},{"struct":"OtherTotalSpecProp","property":"qForceBadValueKeeping","description":"This parameter is used when qOtherMode is set to:\r\nOTHER_ABS_LIMITED\r\nOTHER_REL_LIMITED\r\nOTHER_ABS_ACC_TARGET\r\nOTHER_REL_ACC_TARGET\r\nand when the dimension values include not numeric values.\r\nSet this parameter to true to include text values in the returned values.","type":"Boolean","array":"FALSE","default":"TRUE"},{"struct":"OtherTotalSpecProp","property":"qApplyEvenWhenPossiblyWrongResult","description":"Set this parameter to true to allow the calculation of Others even if the engine detects some potential mistakes.\r\nFor example the country Russia is part of the continent Europe and Asia. If you have an hypercube with two dimensions Country and Continent and one measure Population, the engine can detect that the population of Russia is included in both the continent Asia and Europe.","type":"Boolean","array":"FALSE","default":"TRUE"},{"struct":"OtherTotalSpecProp","property":"qGlobalOtherGrouping","description":"This parameter applies to inner dimensions.\r\nIf this parameter is set to true, the restrictions are calculated on the selected dimension only. All previous dimensions are ignored.","type":"Boolean","array":"FALSE","default":"FALSE"},{"struct":"OtherTotalSpecProp","property":"qOtherCollapseInnerDimensions","description":"If set to true, it collapses the inner dimensions (if any) in the group Others.","type":"Boolean","array":"FALSE","default":"FALSE"},{"struct":"OtherTotalSpecProp","property":"qOtherSortMode","description":"Defines the sort order of the dimension values.","type":"String","array":"FALSE","default":"OTHER_SORT_DESCENDING","options":"OTHER_SORT_DEFAULT, OTHER_SORT_DESCENDING, OTHER_SORT_ASCENDING"},{"struct":"OtherTotalSpecProp","property":"qTotalMode","description":"If set to TOTAL_EXPR, the total of the dimension values is returned.","type":"String","array":"FALSE","default":"TOTAL_OFF","options":"TOTAL_OFF, TOTAL_EXPR"},{"struct":"OtherTotalSpecProp","property":"qReferencedExpression","description":"This parameter applies when there are several measures.\r\nName of the measure to use for the calculation of Others for a specific dimension.","type":"String","array":"FALSE"},{"struct":"NxAttrExprDef","property":"qExpression","description":"Definition of the attribute expression.\r\nExample: \"Max(OrderID)\"","type":"String","array":"FALSE"},{"struct":"NxAttrExprDef","property":"qLibraryId","description":"Definition of the attribute expression stored in the library.\r\nExample: \"MyGenericMeasure\"","type":"String","array":"FALSE"},{"struct":"NxAttrDimDef","property":"qDef","description":"Expression or field name.","type":"String","array":"FALSE"},{"struct":"NxAttrDimDef","property":"qLibraryId","description":"LibraryId for dimension.","type":"String","array":"FALSE"},{"struct":"NxAttrDimDef","property":"qSortBy","description":"Sorting.","type":"SortCriteria","array":"FALSE"},{"struct":"NxInlineMeasureDef","property":"qLabel","description":"Name of the measure.\r\nThis parameter is optional.\r\nAn empty string is returned as a default value.","type":"String","array":"FALSE"},{"struct":"NxInlineMeasureDef","property":"qDescription","description":"Description of the measure.\r\nThis parameter is optional.\r\nAn empty string is returned as a default value.","type":"String","array":"FALSE"},{"struct":"NxInlineMeasureDef","property":"qTags","description":"Name connected to the measure that is used for search purposes.\r\nThis parameter is optional.\r\nA measure can have several tags.","type":"String","array":"TRUE"},{"struct":"NxInlineMeasureDef","property":"qGrouping","description":"This parameter is optional.","type":"String","array":"FALSE","options":"N,H,C"},{"struct":"NxInlineMeasureDef","property":"qDef","description":"Definition of the expression in the measure.\r\nExample: Sum (OrderTotal)\r\nThis parameter is mandatory.","type":"String","array":"FALSE"},{"struct":"NxInlineMeasureDef","property":"qNumFormat","description":"Format of the field.\r\nThis parameter is optional.","type":"FieldAttributes","array":"FALSE"},{"struct":"NxInlineMeasureDef","property":"qRelative","description":"If set to true, percentage values are returned instead of absolute numbers.\r\nThis parameter is optional.","type":"Boolean","array":"FALSE","default":"FALSE"},{"struct":"NxInlineMeasureDef","property":"qBrutalSum","description":"If set to true, the sum of rows total should be used rather than real expression total.\r\nThis parameter is optional and applies to straight tables.\r\nDefault is false. If using the Qlik Sense interface, it means that the total mode is set to Expression Total.","type":"Boolean","array":"FALSE","default":"FALSE"},{"struct":"NxInlineMeasureDef","property":"qAggrFunc","description":"Aggregate function.\r\nFor more information on the aggregate function syntax, see the section Working with Qlik Sense on the online help portal.\r\nThe default value is 0 (Sum of rows)\r\nThis parameter is optional.","type":"String","array":"FALSE","default":"0"},{"struct":"NxInlineMeasureDef","property":"qAccumulate","description":"0 means no accumulation\r\n1 means full accumulation (each y-value accumulates all previous y-values of the expression) \r\n≥ 2 means accumulate as many steps as the qAccumulate value\r\nThis parameter is optional.","type":"Integer","array":"FALSE","default":"0"},{"struct":"NxInlineMeasureDef","property":"qReverseSort","description":"If set to true, it inverts the sort criteria in the field.","type":"Boolean","array":"FALSE"},{"struct":"NxInlineMeasureDef","property":"qActiveExpression","description":"Index of the active expression in a cyclic measure. The indexing starts from 0.\r\nThis parameter is optional. ","type":"Integer","array":"FALSE","default":"0"},{"struct":"NxInlineMeasureDef","property":"qExpressions","description":"Array of expressions. This parameter is used in case of cyclic measures (qGrouping is C). List of the expressions in the cyclic group.","type":"String","array":"TRUE"},{"struct":"SortCriteria","property":"qSortByState","description":"Sorts the field values according to their logical state (selected, optional, alternative or excluded).","type":"Integer","array":"FALSE","options":"-1,0,1"},{"struct":"SortCriteria","property":"qSortByFrequency","description":"Sorts the field values by frequency (number of occurrences in the field).","type":"Integer","array":"FALSE","options":"-1,0,1"},{"struct":"SortCriteria","property":"qSortByNumeric","description":" Sorts the field values by numeric value.","type":"Integer","array":"FALSE","options":"-1,0,1"},{"struct":"SortCriteria","property":"qSortByAscii","description":"Sorts the field by alphabetical order.","type":"Integer","array":"FALSE","options":"-1,0,1"},{"struct":"SortCriteria","property":"qSortByLoadOrder","description":"Sorts the field values by the initial load order.","type":"Integer","array":"FALSE","options":"-1,0,1"},{"struct":"SortCriteria","property":"qSortByExpression","description":"Sorts the field by expression.","type":"Integer","array":"FALSE","options":"-1,0,1"},{"struct":"SortCriteria","property":"qExpression","description":"Sort by expression.\r\n\"qv\": \"<expression>\"\r\nWhere\r\n<expression> is a string.","type":"String","array":"FALSE"},{"struct":"FieldAttributes","property":"qType","description":"Type of the field.","type":"String","array":"FALSE","default":"U","options":"U,A,I,R,F,M,D,T,TS,IV"},{"struct":"FieldAttributes","property":"qnDec","description":"Number of decimals.","type":"Integer","array":"FALSE","default":"10","options":"Between 0 and 15"},{"struct":"FieldAttributes","property":"qUseThou","description":"Defines whether or not a thousands separator must be used.","type":"Integer","array":"FALSE","default":"0","options":"0,1"},{"struct":"FieldAttributes","property":"qFmt","description":"Defines the format pattern that applies to qText.\r\nIs used in connection to the type of the field (parameter qType).\r\nFor more information, see Struct FieldAttributes.\r\nExample: YYYY-MM-DD for a date","type":"String","array":"FALSE"},{"struct":"FieldAttributes","property":"qDec","description":"Defines the decimal separator.\r\nExample: .","type":"String","array":"FALSE"},{"struct":"FieldAttributes","property":"qThou","description":"Defines the thousand separator (if any).\r\nIs used if qUseThou is set to 1.\r\nExample: ,","type":"String","array":"FALSE"},{"struct":"FieldAttributes","property":"qSAFEARRAY","type":"Array","array":"TRUE"}];